// Generated by view binder compiler. Do not edit!
package com.example.projetofinalquad4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projetofinalquad4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FavoritesFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TitleMainBinding include;

  @NonNull
  public final DividerBinding include3;

  @NonNull
  public final ConstraintLayout mainActivity2;

  @NonNull
  public final RecyclerView recyclerViewFavorites;

  private FavoritesFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TitleMainBinding include, @NonNull DividerBinding include3,
      @NonNull ConstraintLayout mainActivity2, @NonNull RecyclerView recyclerViewFavorites) {
    this.rootView = rootView;
    this.include = include;
    this.include3 = include3;
    this.mainActivity2 = mainActivity2;
    this.recyclerViewFavorites = recyclerViewFavorites;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FavoritesFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FavoritesFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.favorites_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FavoritesFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      TitleMainBinding binding_include = TitleMainBinding.bind(include);

      id = R.id.include3;
      View include3 = ViewBindings.findChildViewById(rootView, id);
      if (include3 == null) {
        break missingId;
      }
      DividerBinding binding_include3 = DividerBinding.bind(include3);

      ConstraintLayout mainActivity2 = (ConstraintLayout) rootView;

      id = R.id.recyclerViewFavorites;
      RecyclerView recyclerViewFavorites = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewFavorites == null) {
        break missingId;
      }

      return new FavoritesFragmentBinding((ConstraintLayout) rootView, binding_include,
          binding_include3, mainActivity2, recyclerViewFavorites);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
